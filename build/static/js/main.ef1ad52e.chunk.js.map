{"version":3,"sources":["Header.js","UserInput.js","GuessDisplay.js","GetHelp.js","App.js","index.js"],"names":["Header","UserInput","currentWord","triggerNext","useState","userInput","setUserInput","isSolved","setIsSolved","useEffect","console","log","setTimeout","onSubmit","e","preventDefault","type","autoFocus","value","onChange","target","GuessDisplay","wordSrc","className","src","alt","GetHelp","App","setCurrentWord","id","word","wordIndex","sentence","imgSrc","seen","wordsArray","setWordsArray","playing","setPlaying","filteredWords","filter","length","randomIndex","Math","floor","random","randomWord","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAQeA,EARA,WACb,OACE,8BCwCWC,EAxCG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAAiB,EACdC,mBAAS,IADK,mBACzCC,EADyC,KAC9BC,EAD8B,OAEhBF,oBAAS,GAFO,mBAEzCG,EAFyC,KAE/BC,EAF+B,KA6BhD,OAxBAC,qBAAU,WAYR,OAXGJ,IAAYH,IACbQ,QAAQC,IAAI,iBACZR,IACAK,GAAY,GACZI,YAAW,WACTJ,GAAY,GACZF,EAAa,MACZ,OAIE,WACLI,QAAQC,IAAI,yBAGd,CAACN,IASD,uBAAMQ,SAHR,SAAwBC,GAAGA,EAAEC,kBAG3B,UACE,uBAAOC,KAAK,OAAOC,WAAS,EAACC,MAAOb,EAAWc,SARnD,SAA0BL,GACxBR,EAAaQ,EAAEM,OAAOF,UAQpB,+CAAkBb,KAClB,4CAAeH,KACf,8BAAMK,GAAY,gBChBTc,EApBM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAErB,OAaE,aAZA,CAYA,OAAKC,UAAU,oBAAoBC,IAAKF,EAASG,IAAI,MCb1C,SAASC,IACtB,OACE,8CCyFWC,MAtFf,WACE,IADa,EAkDyBvB,qBAlDzB,mBAkDNF,EAlDM,KAkDO0B,EAlDP,OAmDuBxB,mBAlDpB,CAAC,CACfyB,GAAI,EACJC,KAAM,QACNC,UAAW,EACXC,SAAU,wBACVC,OAAQ,gCACRC,MAAM,GAER,CACEL,GAAI,EACJC,KAAM,YACNC,UAAW,EACXC,SAAU,+BACVC,OAAQ,wBACRC,MAAM,GAER,CACEL,GAAI,EACJC,KAAM,WACNC,UAAW,EACXC,SAAU,8BACVC,OAAQ,0BACRC,MAAM,GAER,CACEL,GAAI,EACJC,KAAM,SACNC,UAAW,EACXC,SAAU,gCACVC,OAAQ,sBACRC,MAAM,GAER,CACEL,GAAI,EACJC,KAAM,WACNC,UAAW,EACXC,SAAU,2BACVC,OAAQ,wBACRC,MAAM,GAER,CACEL,GAAI,EACJC,KAAM,QACNC,UAAW,EACXC,SAAU,qBACVC,OAAQ,oBACRC,MAAM,KA/CK,mBAmDNC,EAnDM,KAmDMC,EAnDN,OAoDgBhC,oBAAS,GApDzB,mBAoDNiC,EApDM,KAoDEC,EApDF,KAsDb,SAASnC,IAEP,IAAIoC,EAAgBJ,EAAWK,QAAO,SAACV,GACrC,OAAIA,IAAO5B,KAKb,GAAGqC,EAAcE,OAAO,EAAE,CACxBL,EAAcG,GACd,IAAIG,EAAcC,KAAKC,MAAMD,KAAKE,SAASV,EAAWM,QAClDK,EAAaX,EAAWO,GAC5Bd,EAAekB,QAEfR,GAAW,GACX5B,QAAQC,IAAI,aAIhB,OACE,sBAAKY,UAAU,MAAf,UACE,cAAC,EAAD,KAEEc,GAAW,wBAAQU,QAAS,WAAKT,GAAW,GAAOnC,KAAxC,oBACZkC,GAAW,2DAA8BnC,EAAY4B,KAA1C,uBAAoEK,EAAWM,UAC1FJ,GAAW,cAACX,EAAD,CAASJ,QAASpB,EAAY+B,SACzCI,GAAW,cAAC,EAAD,CAAcf,QAASpB,EAAY+B,SAC9CI,GAAU,cAAC,EAAD,CAAWnC,YAAaA,EAAY4B,KAAM3B,YAAaA,QCnFxE6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ef1ad52e.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <>\r\n    {/* <header>Raro raro!</header> */}\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Header;","import { useState, useEffect } from \"react\";\r\n\r\nconst UserInput = ({currentWord, triggerNext}) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [isSolved, setIsSolved] = useState(false)\r\n  \r\n\r\n  useEffect(()=>{\r\n    if(userInput===currentWord){\r\n      console.log(\"USE EFFECT IN\")\r\n      triggerNext();\r\n      setIsSolved(true);\r\n      setTimeout(() => {\r\n        setIsSolved(false);\r\n        setUserInput('');\r\n      }, 1500);\r\n\r\n    }\r\n\r\n    return ()=>{\r\n      console.log(\"USE Effect cleanup\")\r\n    }\r\n\r\n  },[userInput])\r\n\r\n  function handleUserInput (e){\r\n    setUserInput(e.target.value);\r\n  }\r\n  \r\n  function submitFunction(e){e.preventDefault()}\r\n\r\n  return (\r\n    <form onSubmit={submitFunction}>\r\n      <input type=\"text\" autoFocus value={userInput} onChange={handleUserInput}></input>  \r\n      <div>user input: {userInput}</div>\r\n      <div>current: {currentWord}</div>\r\n      <div>{isSolved && 'SOLVED!'}</div>\r\n    </form>\r\n    \r\n  );\r\n}\r\n \r\nexport default UserInput;\r\n","const GuessDisplay = ({wordSrc}) => {\r\n  \r\n  return (\r\n    // <div className=\"guess-display-img\"\r\n      // style = {\r\n      //   { backgroundImage: `url(${wordSrc})`,\r\n      //   backgroundRepeat: 'no-repeat',\r\n      //   backgroundPosition: 'center top',\r\n      //   backgroundSize: '100% auto',\r\n        // height: '100%',\r\n        // width:'auto'\r\n        // }\r\n        // }\r\n        // >\r\n    /* </div> */      \r\n    <img className=\"guess-display-img\" src={wordSrc} alt=\"\" />\r\n\r\n  );\r\n}\r\n \r\nexport default GuessDisplay","import React from 'react'\r\n\r\nexport default function GetHelp() {\r\n  return (\r\n    <div>\r\n      \"GET help!\"\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Header from './Header'\nimport UserInput from './UserInput';\nimport GuessDisplay from './GuessDisplay';\nimport GetHelp from './GetHelp';\nimport { useState } from 'react';\n\nfunction App() {\n  let wordsBank = [{\n    id: 1,\n    word: 'globo',\n    wordIndex: 3,\n    sentence: 'El globo es precioso.',\n    imgSrc: './img/037-hot air balloon.png',\n    seen: false\n  },\n  {\n    id: 2,\n    word: 'bicicleta',\n    wordIndex: 3,\n    sentence: 'Es una bicicleta muy bonita.',\n    imgSrc: './img/025-bicycle.png',\n    seen: false\n  },\n  {\n    id: 3,\n    word: 'limusina',\n    wordIndex: 3,\n    sentence: 'Una limusina de alto nivel.',\n    imgSrc: './img/042-limousine.png',\n    seen: false\n  },\n  {\n    id: 4,\n    word: 'camion',\n    wordIndex: 3,\n    sentence: 'Este es un camion muy pesado.',\n    imgSrc: './img/048-truck.png',\n    seen: false\n  },\n  {\n    id: 5,\n    word: 'caravana',\n    wordIndex: 3,\n    sentence: 'Una caravana muy amplia.',\n    imgSrc: './img/050-caravan.png',\n    seen: false\n  },\n  {\n    id: 6,\n    word: 'coche',\n    wordIndex: 3,\n    sentence: 'Un coche muy util.',\n    imgSrc: './img/002-car.png',\n    seen: false\n  },]\n\n  const [currentWord, setCurrentWord] = useState();\n  const [wordsArray, setWordsArray] = useState(wordsBank);\n  const [playing,setPlaying] = useState(false);\n\n  function triggerNext(){\n    \n    let filteredWords = wordsArray.filter((word)=>{\n      if (word!==currentWord){\n        return true\n      } return false\n    })\n    // console.log(\"Filtered\", filteredWords)\n    if(filteredWords.length>0){\n      setWordsArray(filteredWords);\n      let randomIndex = Math.floor(Math.random()*wordsArray.length)\n      let randomWord = wordsArray[randomIndex]\n      setCurrentWord(randomWord);\n    }else{\n      setPlaying(false);\n      console.log(\"GAME OVER\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      {!playing && <button onClick={()=>{setPlaying(true); triggerNext()}}>Start!</button>}\n      {playing && <div>Current target word is: {currentWord.word}. Total words left: {wordsArray.length}</div>}\n      {playing && <GetHelp wordSrc={currentWord.imgSrc}/>}\n      {playing && <GuessDisplay wordSrc={currentWord.imgSrc}/>}\n      {playing &&<UserInput currentWord={currentWord.word} triggerNext={triggerNext}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}