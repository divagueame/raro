{"version":3,"sources":["UserInput.js","GetHelp.js","SkipWord.js","GuessDisplay.js","NextGameButton.js","App.js","index.js"],"names":["UserInput","word","triggerNext","helped","useState","userInput","setUserInput","isSolved","setIsSolved","sentence","splitSentence","s","i","arr","substr","useEffect","setTimeout","console","log","onSubmit","e","preventDefault","autoComplete","className","style","backgroundColor","color","margin","borderRadius","fontSize","wordIndex","autoFocus","name","value","onChange","target","GetHelp","setHelped","helpTime","setHelpTime","onClick","SkipWord","GuessDisplay","src","process","imgSrc","alt","NextGameButton","updateCurrentWord","setPlaying","playing","isHidden","setIsHidden","btnClassName","type","App","wordsBank","id","wordsArray","setWordsArray","currentWord","setCurrentWord","length","randomIndex","Math","floor","random","randomWord","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e76becc.chunk.js","sourcesContent":["import AutosizeInput from 'react-input-autosize';\r\nimport { useState, useEffect } from \"react\";\r\nimport { VscError } from \"react-icons/vsc\";\r\nimport { IoIosCheckmarkCircle } from \"react-icons/io\";\r\n\r\nconst UserInput = ({word, triggerNext, helped}) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [isSolved, setIsSolved] = useState(false)\r\n  let sentence = word.sentence\r\n  \r\n  function splitSentence(s,i){\r\n    let arr = [];\r\n    arr[0] = s.substr(0,i);\r\n    arr[1] = s.substr(i);\r\n    return arr\r\n  }\r\n\r\n\r\n  const solvedIconStyle = {\r\n    backgroundColor: \"white\",\r\n    color: \"#457fca\", \r\n    margin: \"0rem\",\r\n    borderRadius: \"100%\",\r\n    fontSize: \"1.2rem\"\r\n  }\r\n  const notSolvedIconStyle = {\r\n    backgroundColor: \"white\",\r\n    color: \"#ff5e00\", \r\n    margin: \"0rem\",\r\n    borderRadius: \"100%\",\r\n    fontSize: \"1.2rem\"\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    if(userInput===word.word){\r\n      \r\n      setIsSolved(true);\r\n      setTimeout(() => {\r\n          \r\n        setIsSolved(false);\r\n        setUserInput('');\r\n        triggerNext();\r\n      }, 1500);\r\n\r\n    }\r\n\r\n    return ()=>{\r\n      console.log(\"USE Effect cleanup\")\r\n    }\r\n\r\n  },[userInput])\r\n\r\n  function handleUserInput (e){\r\n    setUserInput(e.target.value);\r\n  }\r\n  \r\n  function submitFunction(e){e.preventDefault()}\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={submitFunction}  autoComplete=\"off\">\r\n    <div className=\"feedbackBox\">\r\n      {isSolved && <IoIosCheckmarkCircle style={solvedIconStyle}/>}\r\n      {!isSolved && <VscError style={notSolvedIconStyle}/>}\r\n    </div>\r\n    <span>{splitSentence(sentence,word.wordIndex)[0]}</span>\r\n    {helped && <AutosizeInput autoFocus className=\"userAnswerInput\"\r\n\tname=\"form-field-name\"\r\n\tvalue={word.word}\r\n  onChange={()=>{\r\n  }}\r\n/>}\r\n    {!helped && <AutosizeInput autoFocus className=\"userAnswerInput\"\r\n\tname=\"form-field-name\"\r\n\tvalue={userInput}\r\n  onChange={handleUserInput}\r\n/>}\r\n   \r\n      <span className=\"form-second-span\">{splitSentence(sentence,word.wordIndex)[1]}</span> \r\n\r\n    \r\n    \r\n    </form>\r\n\r\n    </>\r\n  );\r\n}\r\n \r\nexport default UserInput;\r\n","import {useState } from 'react';\r\nimport { MdHelp } from 'react-icons/md';\r\n\r\nconst GetHelp = ({setHelped}) => {\r\n  const [helpTime,setHelpTime] = useState(1200);\r\n\r\n  function handleHelpBtn(){\r\n    setHelped(true);\r\n    setTimeout(()=>{\r\n      setHelped(false);\r\n      \r\n      let newHelpTime = helpTime * 1\r\n      setHelpTime(newHelpTime)\r\n    }, helpTime)\r\n  }\r\n\r\nreturn (\r\n  <div  className=\"help-btn\">\r\n    <MdHelp onClick={()=>{handleHelpBtn()}}/>\r\n  \r\n  </div>\r\n  \r\n\r\n)\r\n}\r\nexport default GetHelp\r\n","import {useState } from 'react';\r\nimport { IoPlaySkipForwardCircle } from 'react-icons/io5';\r\n\r\nconst SkipWord = ({word, triggerNext}) => {\r\n  \r\n\r\n  function handleHelpBtn(){\r\n    \r\n    triggerNext()\r\n    \r\n  }\r\n\r\nreturn (\r\n  <div  className=\"skip-word-btn\">\r\n    <IoPlaySkipForwardCircle onClick={()=>{handleHelpBtn()}}/>\r\n  </div>\r\n\r\n)\r\n}\r\nexport default SkipWord\r\n","import {useState } from 'react';\r\nimport UserInput from './UserInput';\r\nimport GetHelp from './GetHelp';\r\nimport SkipWord from './SkipWord';\r\n\r\nconst GuessDisplay = ({word, triggerNext}) => {\r\n\r\n  const [helped,setHelped] = useState(false);\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"guessDisplayContainer\">\r\n      <div className=\"guessDisplay\">\r\n      <div className=\"buttons-wrapper\">\r\n        <SkipWord word={word} triggerNext={triggerNext}/>\r\n        <GetHelp setHelped={setHelped} word={word}/>\r\n      </div>\r\n      \r\n      <UserInput word={word} triggerNext={triggerNext} helped={helped}/>\r\n      <img className=\"guess-display-img\" src={process.env.PUBLIC_URL + word.imgSrc} alt=\"Guess...\" />\r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default GuessDisplay","import React from 'react'\r\nimport { useState } from \"react\";\r\nimport { IoRocketSharp } from 'react-icons/io5';\r\nexport default function NextGameButton({updateCurrentWord, setPlaying, playing}) {\r\n\r\n  const [isHidden, setIsHidden] = useState(false);\r\n\r\n  const toggleIsHidden = ()=>{\r\n    setIsHidden(!isHidden)\r\n  }\r\n\r\n  let btnClassName = 'next-game-btn';\r\n\r\n  if (isHidden) {\r\n    btnClassName += ' next-game-btn-hidden';\r\n  }\r\n  return (\r\n    <div className=\"next-game-btn-wrapper\">\r\n    \r\n      <button className={btnClassName} type=\"button\" onClick={(e) => { \r\n        toggleIsHidden();\r\n\r\n        setTimeout(()=>{\r\n          updateCurrentWord();\r\n          setPlaying(true);\r\n\r\n        },1100)\r\n        }}>\r\n        <IoRocketSharp />\r\n        <span>New game</span> \r\n        </button>\r\n    </div>\r\n        \r\n  )\r\n}\r\n","import './App.css';\nimport Header from './Header'\nimport UserInput from './UserInput';\nimport GuessDisplay from './GuessDisplay';\n\nimport NextGameButton from './NextGameButton';\nimport {useState, useEffect } from 'react';\n\n\nfunction App() {\n  let wordsBank = [{\n    id: 1,\n    word: 'playa',\n    wordIndex: 23,\n    sentence: 'Me encantaría ir a una  bonita.',\n    imgSrc: '/img/beach.svg'\n  },\n  {\n    id: 2,\n    word: 'puente',\n    wordIndex: 11,\n    sentence: 'Este es un  muy moderno.',\n    imgSrc: '/img/bridge.svg'\n  },\n  {\n    id: 3,\n    word: 'paisaje',\n    wordIndex: 5,\n    sentence: '¡Qué  paisaje tan bonito!',\n    imgSrc: '/img/hills.svg'\n  },\n  {\n    id: 4,\n    word: 'castillo',\n    wordIndex: 11,\n    sentence: 'Este es un  medieval espectacular.',\n    imgSrc: '/img/castle.svg'\n  },\n  {\n    id: 5,\n    word: 'ciudad',\n    wordIndex: 40,\n    sentence: '!Qué edificios tan grandes hay en esta  ¡',\n    imgSrc: '/img/cityscape.svg'\n  },\n  {\n    id: 6,\n    word: 'desierto',\n    wordIndex: 7,\n    sentence: 'En este hace muchísimo calor.',\n    imgSrc: '/img/desert-1.svg'\n  },\n  {\n    id: 7,\n    word: 'desierto',\n    wordIndex: 29,\n    sentence: 'No hay muchas plantas en el  .',\n    imgSrc: '/img/desert.svg'\n  },\n  {\n    id: 8,\n    word: 'paisaje',\n    wordIndex: 11,\n    sentence: 'Este es un  muy agradable.',\n    imgSrc: '/img/fields-1.svg'\n  }, \n  {\n    id: 9,\n    word: 'paisaje',\n    wordIndex: 5,\n    sentence: 'Este  es muy verde.',\n    imgSrc: '/img/forest.svg'\n  },\n]\n\n  const [wordsArray, setWordsArray] = useState(wordsBank);\n  const [currentWord, setCurrentWord] = useState();\n  const [playing,setPlaying] = useState(false);\n  \n  \n\n  function updateCurrentWord(){\n    if(wordsArray.length>=1){\n      let randomIndex = Math.floor(Math.random()*wordsArray.length)\n      let randomWord = wordsArray[randomIndex]\n      setCurrentWord(randomWord);\n      setWordsArray(wordsArray.filter(word=>word!==randomWord));\n    } \n  }\n\n  function triggerNext(){\n    if(wordsArray.length>0){\n        updateCurrentWord()\n    }else{\n      setPlaying(false);\n      setWordsArray(wordsBank);\n      updateCurrentWord()\n      console.log(\"GAME OVER\")\n    }\n  }\n\n  return (  \n    // <div className=\"App\">\n    <>\n      {/* <Header /> */}\n\n      {!playing &&  \n      <NextGameButton updateCurrentWord={updateCurrentWord} setPlaying={setPlaying} playing={playing}/>\n      }\n      {!playing &&  \n      <div className=\"bottom-info\">How many can you get right? </div>\n      }\n \n      \n      {playing && <GuessDisplay word={currentWord} triggerNext={triggerNext}/>}\n      \n\n\n      {/* {playing && <div>Current target word is: {currentWord.word}. Total words left: {wordsArray.length}</div>} */}\n    {/* </div> */}\n    </>\n  );\n}\n\nexport default App;\n\n\n\n{/* <Collapsible>\n<h2>Title</h2>\n<p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Deleniti assumenda a quibusdam tenetur laboriosam nihil accusantium tempore quasi perspiciatis unde.</p>\n</Collapsible> */}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}